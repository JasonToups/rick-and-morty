{"version":3,"sources":["assets/logo-RickAndMorty.png","assets/Characteropedia.png","components/Card/Card.js","components/RenderedCards/RenderedCards.js","pages/Home/Home.js","base/App.js","reportWebVitals.js","index.js"],"names":["Card","id","imgSrc","imgAlt","name","species","gender","status","location","episodeFirst","episodes","className","src","alt","RenderedCards","array","results","resultsInfo","info","count","returnArray","pages","next","prev","resultsArray","console","log","x","length","image","episode","push","renderCards","map","character","Home","useState","React","useEffect","setResults","getCharacters","endpoint","fetch","then","response","json","data","catch","error","logo","characteropedia","type","placeholder","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1351307.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-RickAndMorty.53bd11aa.png\";","export default __webpack_public_path__ + \"static/media/Characteropedia.0814b805.png\";","import React from 'react';\nimport './Card.scss';\n\nconst Card = ({\n  id,\n  imgSrc,\n  imgAlt,\n  name,\n  species,\n  gender,\n  status,\n  location,\n  episodeFirst,\n  episodes,\n}) => {\n  return (\n    <div className='card' key={id}>\n      <div className='card-image--wrapper'>\n        <img className='card-image' src={imgSrc} alt={imgAlt} />\n      </div>\n      <div className='card-body'>\n        <h2>\n          #{id} - {name}\n        </h2>\n        <h3>\n          {status} - {species} - {gender}\n        </h3>\n        <p>Last known location:</p>\n        <p>{location}</p>\n        <p>First seen in:</p>\n        <p>episode {episodeFirst}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './RenderedCards.scss';\nimport Card from '../Card/Card';\n\nconst RenderedCards = ({ results }) => {\n  const resultsInfo = results.info;\n  const count = resultsInfo.count;\n  const pages = resultsInfo.pages;\n  const next = resultsInfo.next;\n  const prev = resultsInfo.prev;\n  const returnArray = [];\n\n  const resultsArray = results.results;\n\n  const mapCards = array => {\n    return array.map(character => {\n      console.log(character);\n      return (\n        <Card\n          id={character.id}\n          imgSrc={character.image}\n          imgAlt={character.name}\n          name={character.name}\n          status={character.status}\n          species={character.species}\n          gender={character.gender}\n          location={character.location.name}\n          episode={character.episode[0]}\n        />\n      );\n    });\n  };\n\n  const renderCards = (array, info) => {\n    console.log('rendering cards');\n\n    function printInfo(info) {\n      console.log(info.count);\n      console.log(info.pages);\n      console.log(info.next);\n      console.log(info.prev);\n    }\n\n    for (let x = 0; x < array.length; x++) {\n      console.log(array[x].image);\n      console.log(array[x].name);\n      console.log(array[x].species);\n      console.log(array[x].gender);\n      console.log(array[x].status);\n      console.log(array[x].location);\n      console.log(array[x].episode[0]);\n      console.log(array[x].episode);\n      console.log(array[x].id);\n      returnArray.push(\n        <Card\n          key={array[x].id}\n          imgSrc={array[x].image}\n          imgAlt={array[x].name}\n          name={array[x].name}\n          status={array[x].status}\n          species={array[x].species}\n          gender={array[x].gender}\n          location={array[x].location}\n          episode={array[x].episode[0]}\n        />,\n      );\n    }\n    console.log(returnArray);\n    return returnArray;\n  };\n  renderCards(resultsArray, resultsInfo);\n\n  return (\n    <section className='rendered-cards'>\n      <div className='rendered-cards--header'>\n        <h1>Number of Results: {count}</h1>\n      </div>\n      <div className='rendered-cards--results'>{mapCards(resultsArray)}</div>\n    </section>\n  );\n};\n\nexport default RenderedCards;\n","import React from 'react';\n\nimport './Home.scss';\nimport '../../components/HomeHeader/HomeHeader.scss';\nimport '../../components/Search/Search.scss';\nimport logo from '../../assets/logo-RickAndMorty.png';\nimport characteropedia from '../../assets/Characteropedia.png';\n\nimport RenderedCards from '../../components/RenderedCards/RenderedCards';\n\nconst Home = () => {\n  const { useState, useEffect } = React;\n  const [results, setResults] = useState(null);\n  const [renderCards, setRenderCards] = useState(null);\n\n  useEffect(() => {\n    getCharacters();\n  }, []);\n\n  const getCharacters = (endpoint) => {\n    const api = 'https://rickandmortyapi.com/api/character/';\n    fetch(api)\n      .then(response => response.json())\n      .then(data => {\n        console.log('Success:', data);\n        setResults(data);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <section>\n      <section className='home-header'>\n        <div className='logos'>\n          <img\n            className='home-header--image'\n            src={logo}\n            alt='rick and morty logo'\n          />\n          <img\n            className='home-header--image'\n            src={characteropedia}\n            alt='characteropedia'\n          />\n        </div>\n        <div className='search-form'>\n          <form>\n            <input\n              className='search-field'\n              type='text'\n              placeholder='Search for a character'></input>\n            <input\n              className='submit-button'\n              type='submit'\n              value='submit'></input>\n          </form>\n        </div>\n      </section>\n      {results ? <RenderedCards results={results} /> : <h1>Loading Results</h1>}\n    </section>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.scss';\nimport Home from '../pages/Home/Home';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './base/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}