{"version":3,"sources":["assets/logo-RickAndMorty.png","assets/Characteropedia.png","components/Card/Card.js","components/RenderedCards/RenderedCards.js","pages/Home/Home.js","base/App.js","reportWebVitals.js","index.js"],"names":["Card","id","imgSrc","imgAlt","name","species","gender","status","location","episodeFirst","episodes","className","src","alt","RenderedCards","array","results","useState","info","count","next","pages","items","map","character","image","episode","Home","setResults","useEffect","getCharacters","fetch","then","response","json","data","console","log","catch","error","logo","characteropedia","type","placeholder","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAAe,G,kBAAA,IAA0B,+CCA1B,MAA0B,4CCoC1BA,G,iBAjCF,SAAC,GAWP,IAVLC,EAUI,EAVJA,GACAC,EASI,EATJA,OACAC,EAQI,EARJA,OACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,QACAC,EAKI,EALJA,OACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aAEI,EADJC,SAEA,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,aAAaC,IAAKV,EAAQW,IAAKV,MAEhD,sBAAKQ,UAAU,YAAf,UACE,mCACIV,EADJ,MACWG,KAEX,+BACGG,EADH,MACcF,EADd,MAC0BC,KAE1B,qDACA,4BAAIE,IACJ,+CACA,4BAAIC,SAdmBR,KCwChBa,G,MAnDO,SAAC,GAAiB,IAsBrBC,EAtBMC,EAAc,EAAdA,QAAc,EAEXC,mBAASD,EAAQE,KAAKC,OAFX,mBAE9BA,EAF8B,aAIbF,mBAASD,EAAQE,KAAKE,OAJT,gCAMXH,mBAASD,EAAQE,KAAKG,QANX,gCAQXJ,mBAASD,IARE,mBAQ9BM,EAR8B,UAyCrC,OACE,0BAASX,UAAU,iBAAnB,UACE,qBAAKA,UAAU,yBAAf,SACE,qDAAwBQ,OAE1B,qBAAKR,UAAU,0BAAf,UAxBaI,EAwBsCO,EAAMN,QAvBpDD,EAAMQ,KAAI,SAAAC,GAEf,OACE,cAAC,EAAD,CACEvB,GAAIuB,EAAUvB,GACdC,OAAQsB,EAAUC,MAClBtB,OAAQqB,EAAUpB,KAClBA,KAAMoB,EAAUpB,KAChBG,OAAQiB,EAAUjB,OAClBF,QAASmB,EAAUnB,QACnBC,OAAQkB,EAAUlB,OAClBE,SAAUgB,EAAUhB,SAASJ,KAC7BK,aAAce,EAAUE,QAAQ,gBCuB3BC,EArDF,WAAO,IAAD,EACaV,mBAAS,MADtB,mBACVD,EADU,KACDY,EADC,KAGjBC,qBAAU,WACRD,EAAWE,EAAc,iDACxB,IAEH,IAAMA,EAAgB,WAEpBC,MADY,8CAETC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAI,WAAYF,GACxBP,EAAWO,MAEZG,OAAM,SAAAC,GACLH,QAAQG,MAAM,SAAUA,OAI9B,OACE,oCACE,0BAAS5B,UAAU,cAAnB,UACE,sBAAKA,UAAU,QAAf,UACE,qBACEA,UAAU,qBACVC,IAAK4B,EACL3B,IAAI,wBAEN,qBACEF,UAAU,qBACVC,IAAK6B,EACL5B,IAAI,uBAGR,qBAAKF,UAAU,cAAf,SACE,iCACE,uBACEA,UAAU,eACV+B,KAAK,OACLC,YAAY,2BACd,uBACEhC,UAAU,gBACV+B,KAAK,SACLE,MAAM,mBAIb5B,EAAU,cAAC,EAAD,CAAeA,QAASA,IAAc,qDC9CxC6B,MARf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.91120f6d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-RickAndMorty.53bd11aa.png\";","export default __webpack_public_path__ + \"static/media/Characteropedia.0814b805.png\";","import React from 'react';\nimport './Card.scss';\n\nconst Card = ({\n  id,\n  imgSrc,\n  imgAlt,\n  name,\n  species,\n  gender,\n  status,\n  location,\n  episodeFirst,\n  episodes,\n}) => {\n  return (\n    <div className='card' key={id}>\n      <div className='card-image--wrapper'>\n        <img className='card-image' src={imgSrc} alt={imgAlt} />\n      </div>\n      <div className='card-body'>\n        <h2>\n          #{id} - {name}\n        </h2>\n        <h3>\n          {status} - {species} - {gender}\n        </h3>\n        <p>Last known location:</p>\n        <p>{location}</p>\n        <p>First seen in:</p>\n        <p>{episodeFirst}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport './RenderedCards.scss';\nimport Card from '../Card/Card';\nimport getCharacters from '../../api/getCharacters';\n\nconst RenderedCards = ({ results }) => {\n  // number of results\n  const [count, setCount] = useState(results.info.count);\n  // next url\n  const [next, setNext] = useState(results.info.next);\n  // amount of pages of results\n  const [pages, setPages] = useState(results.info.pages);\n  // the result items to render\n  const [items, setItems] = useState(results);\n\n  const getNextCharacters = endpoint => {\n    fetch(endpoint)\n      .then(response => response.json())\n      .then(data => {\n        console.log('Success:', data);\n        setItems([items, ...data]);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  const mapCards = array => {\n    return array.map(character => {\n      // console.log(character);\n      return (\n        <Card\n          id={character.id}\n          imgSrc={character.image}\n          imgAlt={character.name}\n          name={character.name}\n          status={character.status}\n          species={character.species}\n          gender={character.gender}\n          location={character.location.name}\n          episodeFirst={character.episode[0]}\n        />\n      );\n    });\n  };\n\n  return (\n    <section className='rendered-cards'>\n      <div className='rendered-cards--header'>\n        <h1>Number of Results: {count}</h1>\n      </div>\n      <div className='rendered-cards--results'>{mapCards(items.results)}</div>\n    </section>\n  );\n};\n\nexport default RenderedCards;\n","import React, { useState, useEffect } from 'react';\n\nimport './Home.scss';\nimport '../../components/HomeHeader/HomeHeader.scss';\nimport '../../components/Search/Search.scss';\nimport logo from '../../assets/logo-RickAndMorty.png';\nimport characteropedia from '../../assets/Characteropedia.png';\n\nimport RenderedCards from '../../components/RenderedCards/RenderedCards';\n\nconst Home = () => {\n  const [results, setResults] = useState(null);\n\n  useEffect(() => {\n    setResults(getCharacters('https://rickandmortyapi.com/api/character/'));\n  }, []);\n\n  const getCharacters = () => {\n    const api = 'https://rickandmortyapi.com/api/character/';\n    fetch(api)\n      .then(response => response.json())\n      .then(data => {\n        console.log('Success:', data);\n        setResults(data);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <section>\n      <section className='home-header'>\n        <div className='logos'>\n          <img\n            className='home-header--image'\n            src={logo}\n            alt='rick and morty logo'\n          />\n          <img\n            className='home-header--image'\n            src={characteropedia}\n            alt='characteropedia'\n          />\n        </div>\n        <div className='search-form'>\n          <form>\n            <input\n              className='search-field'\n              type='text'\n              placeholder='Search for a character'></input>\n            <input\n              className='submit-button'\n              type='submit'\n              value='submit'></input>\n          </form>\n        </div>\n      </section>\n      {results ? <RenderedCards results={results} /> : <h1>Loading Results</h1>}\n    </section>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.scss';\nimport Home from '../pages/Home/Home';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './base/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}