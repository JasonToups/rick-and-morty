{"version":3,"sources":["assets/logo-RickAndMorty.png","assets/Characteropedia.png","components/Card/Card.js","components/RenderedCards/RenderedCards.js","pages/Home/Home.js","base/App.js","reportWebVitals.js","index.js"],"names":["Card","id","imgSrc","imgAlt","name","species","gender","status","location","episodeFirst","episodes","className","src","alt","RenderedCards","results","count","info","useState","next","setNext","items","setItems","loading","setLoading","noData","setNoData","useEffect","getNextCharacters","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","endpoint","fetch","then","response","json","data","console","log","newItems","concat","length","catch","error","finally","map","character","image","episode","Home","setResults","useForm","register","handleSubmit","reset","api","getCharacters","logo","characteropedia","onSubmit","characterName","type","placeholder","ref","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.659fcf69.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-RickAndMorty.53bd11aa.png\";","export default __webpack_public_path__ + \"static/media/Characteropedia.0814b805.png\";","import React from 'react';\nimport './Card.scss';\n\nconst Card = ({\n  id,\n  imgSrc,\n  imgAlt,\n  name,\n  species,\n  gender,\n  status,\n  location,\n  episodeFirst,\n  episodes,\n}) => {\n  return (\n    <div className='card' key={id}>\n      <div className='card-image--wrapper'>\n        <img className='card-image' src={imgSrc} alt={imgAlt} />\n      </div>\n      <div className='card-body'>\n        <h2>\n          #{id} - {name}\n        </h2>\n        <h3>\n          {status} - {species} - {gender}\n        </h3>\n        <p>Last known location:</p>\n        <p>{location}</p>\n        <p>First seen in:</p>\n        <p>{episodeFirst}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport './RenderedCards.scss';\nimport Card from '../Card/Card';\n// import characters from '../../api/characters';\n\nconst RenderedCards = ({ results }) => {\n  // number of results\n  const count = results.info.count;\n  // next url\n  const [next, setNext] = useState(results.info.next);\n  // the result items to render\n  const [items, setItems] = useState(results.results);\n  // controls loading\n  const [loading, setLoading] = useState(false);\n  // no data to load\n  const [noData, setNoData] = useState(false);\n\n  useEffect(() => {\n    getNextCharacters(next);\n  }, []);\n\n  // INFINITE SCROLL\n  window.onscroll = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n      document.documentElement.offsetHeight\n    ) {\n      if (!noData) {\n        getNextCharacters(next);\n      }\n    }\n  };\n\n  // TODO this function errors when it's time to map through the results and render cards, saying that the properties don't exist. Follow this guide to get infinite scrolling to work. https://dev.to/syakirurahman/react-infinite-scroll-tutorial-with-and-without-a-library-1abg\n  const getNextCharacters = endpoint => {\n    setLoading(true);\n    fetch(endpoint)\n      .then(response => response.json())\n      .then(data => {\n        console.log('Success:', data);\n        const newItems = items.concat(data.results);\n        setItems(newItems);\n        setNext(data.info.next);\n        if (data.length === 0) setNoData(true);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <section className='rendered-cards'>\n      <div className='rendered-cards--header'>\n        <h1>Number of Results: {count}</h1>\n      </div>\n      <div className='rendered-cards--results'>\n        {items.map(character => {\n          return (\n            <Card\n              id={character.id}\n              imgSrc={character.image}\n              imgAlt={character.name}\n              name={character.name}\n              status={character.status}\n              species={character.species}\n              gender={character.gender}\n              location={character.location.name}\n              episodeFirst={character.episode[0]}\n            />\n          );\n        })}\n      </div>\n      <div className='rendered-cards--status'>\n        {loading ? (\n          <h1>loading data ...</h1>\n        ) : (\n          <h1>pull up for more laughs!</h1>\n        )}\n        {noData ? <h1>that's all folks!</h1> : ''}\n      </div>\n    </section>\n  );\n};\n\nexport default RenderedCards;\n","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport './Home.scss';\nimport '../../components/HomeHeader/HomeHeader.scss';\nimport '../../components/Search/Search.scss';\nimport logo from '../../assets/logo-RickAndMorty.png';\nimport characteropedia from '../../assets/Characteropedia.png';\n\nimport RenderedCards from '../../components/RenderedCards/RenderedCards';\n\nconst Home = () => {\n  const [results, setResults] = useState(null);\n  // const [characterName, setCharacterName] = useState('');\n  const { register, handleSubmit, reset } = useForm();\n\n  const api = 'https://rickandmortyapi.com/api/character/';\n\n  useEffect(() => {\n    setResults(getCharacters(api));\n    reset();\n  }, []);\n\n  const getCharacters = endpoint => {\n    fetch(endpoint)\n      .then(response => response.json())\n      .then(data => {\n        console.log('Success:', data);\n        setResults(data);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  const onSubmit = data => {\n    // if (data.characterName) {\n    let characterName = data.characterName;\n    let status = data.status;\n    let gender = data.gender;\n    // }\n    setResults(\n      getCharacters(\n        `${api}?name=${characterName}&status=${status}&gender=${gender}`,\n      ),\n    );\n  };\n\n  return (\n    <section>\n      <section className='home-header'>\n        <div className='logos'>\n          <img\n            className='home-header--image'\n            src={logo}\n            alt='rick and morty logo'\n          />\n          <img\n            className='home-header--image'\n            src={characteropedia}\n            alt='characteropedia'\n          />\n        </div>\n        <div className='search-form'>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className='form-group'>\n              <label className='form-label'>Name</label>\n              <input\n                className='form-field'\n                type='search'\n                placeholder='Search for a character'\n                name='characterName'\n                ref={register}></input>\n            </div>\n            <div className='form-group'>\n              <label className='form-label'>Status</label>\n              <select\n                className='form-field'\n                type='dropdown'\n                placeholder='Mortal Status'\n                name='status'\n                ref={register}>\n                <option value=''>None</option>\n                <option value='alive'>Alive</option>\n                <option value='dead'>Dead</option>\n                <option value='unknown'>Unknown</option>\n              </select>\n            </div>\n            <div className='form-group'>\n              <label className='form-label'>Gender</label>\n              <select\n                className='form-field'\n                type='dropdown'\n                placeholder='Gender is fluid'\n                name='gender'\n                ref={register}>\n                <option value=''>None</option>\n                <option value='female'>Female</option>\n                <option value='male'>Male</option>\n                <option value='genderless'>Genderless</option>\n                <option value='unknown'>Unknown</option>\n              </select>\n            </div>\n            <input\n              className='submit-button'\n              type='submit'\n              value='submit'></input>\n          </form>\n        </div>\n      </section>\n      {results ? <RenderedCards results={results} /> : <h1>Loading Results</h1>}\n    </section>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.scss';\nimport Home from '../pages/Home/Home';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './base/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}