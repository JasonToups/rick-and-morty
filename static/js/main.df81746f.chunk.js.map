{"version":3,"sources":["assets/logo-RickAndMorty.png","assets/Characteropedia.png","components/Card/Card.js","components/RenderedCards/RenderedCards.js","pages/Home/Home.js","base/App.js","reportWebVitals.js","index.js"],"names":["Card","imgSrc","imgAlt","name","species","gender","status","location","episodeFirst","episodes","className","src","alt","RenderedCards","results","resultsInfo","info","count","resultsArray","pages","next","prev","console","log","number","length","array","x","image","episode","printInfo","renderCards","Home","useState","React","useEffect","setResults","getCharacters","endpoint","fetch","then","response","json","data","catch","error","logo","characteropedia","type","placeholder","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df81746f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-RickAndMorty.53bd11aa.png\";","export default __webpack_public_path__ + \"static/media/Characteropedia.0814b805.png\";","import React from 'react';\nimport './Card.scss';\n\nconst Card = ({\n  imgSrc,\n  imgAlt,\n  name,\n  species,\n  gender,\n  status,\n  location,\n  episodeFirst,\n  episodes,\n}: {\n  [key: string]: any;\n}) => {\n  return (\n    <div className='card'>\n      <div className='card-image--wrapper'>\n        <img className='card-image' src={imgSrc} alt={imgAlt} />\n      </div>\n      <div className='card-body'>\n        <h2>{name}</h2>\n        <h3>\n          {status} - {species} - {gender}\n        </h3>\n        <p>Last known location:</p>\n        <p>{location}</p>\n        <p>First seen in:</p>\n        <p>episode {episodeFirst}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './RenderedCards.scss';\nimport Card from '../Card/Card';\n\nconst RenderedCards = ({ results }: { [key: string]: any }) => {\n  const resultsInfo = results.info;\n  const count = resultsInfo.count;\n  const pages = resultsInfo.pages;\n  const next = resultsInfo.next;\n  const prev = resultsInfo.prev;\n\n  const resultsArray = results.results;\n\n  const newArray = [{ number: 'one' }, { number: 'two' }, { number: 'three' }];\n  console.log(newArray.length);\n\n  const renderCards = (array: object[], info: object) => {\n    const returnArray = [];\n    console.log('rendering cards');\n    interface infoValue {\n      count: number;\n      pages: number;\n      next: string | null;\n      prev: string | null;\n    }\n    function printInfo(info: infoValue) {\n      console.log(info.count);\n      console.log(info.pages);\n      console.log(info.next);\n      console.log(info.prev);\n    }\n    interface arrayValue {\n      id: number;\n      name: string;\n      status: string;\n      species: string;\n      type: string;\n      gender: string;\n      origin: object;\n      location: object;\n      image: string;\n      episode: string[];\n      url: string;\n      created: string;\n    }\n    for (let x = 0; x < resultsArray.length; x++) {\n      console.log(resultsArray[x].image);\n      console.log(resultsArray[x].name);\n      console.log(resultsArray[x].species);\n      console.log(resultsArray[x].gender);\n      console.log(resultsArray[x].status);\n      console.log(resultsArray[x].location);\n      console.log(resultsArray[x].episode[0]);\n      console.log(resultsArray[x].episode);\n    }\n\n    function printArray(array: arrayValue) {}\n\n    printInfo(resultsInfo);\n    printArray(resultsArray);\n  };\n  renderCards(resultsArray, resultsInfo);\n\n  return (\n    <section className='rendered-cards'>\n      <div className='rendered-cards--header'>\n        <h1>Number of Results: {count}</h1>\n      </div>\n      <div className='rendered-cards--results'>\n        <Card\n          imgSrc='https://rickandmortyapi.com/api/character/avatar/1.jpeg'\n          imgAlt='Rick Sanchez'\n          name='Rick Sanchez'\n          status='Alive'\n          species='Human'\n          gender='Male'\n          location='Earth (Replacement Dimension)'\n          episode='1'\n        />\n        <Card />\n        <Card />\n        <Card />\n      </div>\n    </section>\n  );\n};\n\nexport default RenderedCards;\n","import React from 'react';\n\nimport './Home.scss';\nimport '../../components/HomeHeader/HomeHeader.scss';\nimport '../../components/Search/Search.scss';\nimport logo from '../../assets/logo-RickAndMorty.png';\nimport characteropedia from '../../assets/Characteropedia.png';\n\nimport RenderedCards from '../../components/RenderedCards/RenderedCards';\n\nconst Home = () => {\n  const { useState, useEffect } = React;\n  const [results, setResults] = useState(null);\n  const [renderCards, setRenderCards] = useState(null);\n\n  useEffect(() => {\n    getCharacters();\n  }, []);\n\n  const getCharacters = (endpoint) => {\n    const api = 'https://rickandmortyapi.com/api/character/';\n    fetch(api)\n      .then(response => response.json())\n      .then(data => {\n        console.log('Success:', data);\n        setResults(data);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <section>\n      <section className='home-header'>\n        <div className='logos'>\n          <img\n            className='home-header--image'\n            src={logo}\n            alt='rick and morty logo'\n          />\n          <img\n            className='home-header--image'\n            src={characteropedia}\n            alt='characteropedia'\n          />\n        </div>\n        <div className='search-form'>\n          <form>\n            <input\n              className='search-field'\n              type='text'\n              placeholder='Search for a character'></input>\n            <input\n              className='submit-button'\n              type='submit'\n              value='submit'></input>\n          </form>\n        </div>\n      </section>\n      {results ? <RenderedCards results={results} /> : <h1>Loading Results</h1>}\n    </section>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.scss';\nimport Home from '../pages/Home/Home';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './base/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}